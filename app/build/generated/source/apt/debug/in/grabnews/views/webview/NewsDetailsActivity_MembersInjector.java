// Generated by Dagger (https://google.github.io/dagger).
package in.grabnews.views.webview;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewsDetailsActivity_MembersInjector
    implements MembersInjector<NewsDetailsActivity> {
  private final Provider<NewsDetailsViewModel> mNewsDetailsViewModelProvider;

  public NewsDetailsActivity_MembersInjector(
      Provider<NewsDetailsViewModel> mNewsDetailsViewModelProvider) {
    this.mNewsDetailsViewModelProvider = mNewsDetailsViewModelProvider;
  }

  public static MembersInjector<NewsDetailsActivity> create(
      Provider<NewsDetailsViewModel> mNewsDetailsViewModelProvider) {
    return new NewsDetailsActivity_MembersInjector(mNewsDetailsViewModelProvider);
  }

  @Override
  public void injectMembers(NewsDetailsActivity instance) {
    injectMNewsDetailsViewModel(instance, mNewsDetailsViewModelProvider.get());
  }

  public static void injectMNewsDetailsViewModel(
      NewsDetailsActivity instance, NewsDetailsViewModel mNewsDetailsViewModel) {
    instance.mNewsDetailsViewModel = mNewsDetailsViewModel;
  }
}
