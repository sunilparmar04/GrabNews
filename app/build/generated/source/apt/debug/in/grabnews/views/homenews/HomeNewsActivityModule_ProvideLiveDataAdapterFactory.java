// Generated by Dagger (https://google.github.io/dagger).
package in.grabnews.views.homenews;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class HomeNewsActivityModule_ProvideLiveDataAdapterFactory
    implements Factory<NewsAdapter> {
  private final HomeNewsActivityModule module;

  public HomeNewsActivityModule_ProvideLiveDataAdapterFactory(HomeNewsActivityModule module) {
    this.module = module;
  }

  @Override
  public NewsAdapter get() {
    return Preconditions.checkNotNull(
        module.provideLiveDataAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static HomeNewsActivityModule_ProvideLiveDataAdapterFactory create(
      HomeNewsActivityModule module) {
    return new HomeNewsActivityModule_ProvideLiveDataAdapterFactory(module);
  }

  public static NewsAdapter proxyProvideLiveDataAdapter(HomeNewsActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideLiveDataAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
